#!/usr/bin/env python

"""
Main script for starting LocalStack components.

Usage:
  localstack start [ --docker ]
  localstack web [ --port=<port> ]
  localstack login --provider=<oauth-provider> [ --username=<username> ]
  localstack logout%s
  localstack (-v | --version)
  localstack (-h | --help)

Options:
  -h --help                     Show this screen
  -v --version                  Show version
  --docker                      Run the infrastructure in a Docker container
  --port=<port>                 Network port for running the Web server
  --provider=<oauth-provider>   OAuth provider for login (e.g., github)
  --username=<username>         OAuth username for login
%s
"""

import os
import sys
import json

PARENT_FOLDER = os.path.realpath(os.path.join(os.path.dirname(__file__), '..'))
if os.path.isdir(os.path.join(PARENT_FOLDER, '.venv')):
    sys.path.insert(0, PARENT_FOLDER)

from docopt import docopt
from localstack import config, constants
from localstack.services import infra

if __name__ == '__main__':
    # load CLI plugins
    infra.load_plugins(scope=infra.PLUGIN_SCOPE_COMMANDS)

    # create final usage string
    additional_commands = '\n'.join([c['command'] for c in config.CLI_COMMANDS.values()])
    additional_params = []
    for cmd in config.CLI_COMMANDS.values():
        for param in cmd.get('parameters', []):
            additional_params.append(param)
    additional_params = '\n'.join(additional_params)
    if additional_commands:
        additional_commands = '\n%s' % additional_commands
    doc_string = __doc__ % (additional_commands, additional_params)

    args = docopt(doc_string)

    if args['--version']:
        print(constants.VERSION)
    elif args['start']:
        print('Starting local dev environment. CTRL-C to quit.')
        if args['--docker']:
            infra.start_infra_in_docker()
        else:
            infra.start_infra()
    elif args['login']:
        try:
            auth.login(args['--provider'], args['--username'])
            print('Successfully logged in via provider: %s' % args['--provider'])
        except Exception as e:
            print('Authentication error: %s' % e)
    elif args['logout']:
        auth.logout()
    elif args['web']:
        import localstack.dashboard.api
        port = args['--port'] or constants.DEFAULT_PORT_WEB_UI
        localstack.dashboard.api.serve(port)
    else:
        # run command from additional CLI commands
        for key, params in config.CLI_COMMANDS.items():
            if args.get(key):
                params['function'](args)
                break
